{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Brendan Johnston\\\\Documents\\\\VSCode Projects\\\\Dentist Scheduler - CoFi Project\\\\DentistScheduler\\\\Dentist-Scheduler\\\\src\\\\App.js\";\n// Dentist Scheduler Application\n// Written by Brendan Johnston\n\n/*\n  This application allows for a Dentist office to schedule, and maintain new appointments. This also allows for customers to create new appointments for themselves.\n*/\nimport logo from './logo.svg';\nimport './App.css';\nimport react from 'react';\nimport NewAppointment from './Components/NewAppointments';\nimport Calendar from 'react-calendar';\nimport 'react-calendar/dist/Calendar.css';\nimport { ListGroup } from 'react-bootstrap';\nimport axios from 'axios';\nimport AvailableTimes from './Components/AvailableTimes';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass MainScheduler extends react.Component {\n  constructor(props) {\n    super(props);\n\n    this.onCalendarChange = param => {\n      console.log(param);\n      let date = param.getDate();\n      let month = param.getMonth() + 1;\n      let year = param.getFullYear();\n      let separator = \"/\";\n      let stringVal = `${month < 10 ? `0${month}` : `${month}`}${separator}${date}${separator}${year}`;\n      this.setState({\n        selectedDate: stringVal\n      });\n      this.checkAvailableTimes();\n    };\n\n    this.dateChange = event => {};\n\n    this.onTimeChange = change => {\n      this.setState({\n        appointmentTime: change\n      });\n    };\n\n    this.checkAvailableTimes = () => {\n      var url = \"http://localhost:5083/DentistScheduler/GetAppointmentsByDate/\" + this.state.selectedDate;\n      const header = {\n        \"Access-Control-Allow-Origin\": \"*\"\n      };\n      var success = axios.get(url, header).then(availableTimesFromServer => {\n        console.log(availableTimesFromServer);\n        this.setState({\n          availableTimes: availableTimesFromServer.data\n        });\n      }).catch(ex => {\n        console.log(ex);\n      });\n      console.log(success);\n    };\n\n    let _date = this.getCurrentDate(\"/\");\n\n    console.log(_date);\n    this.state = {\n      selectedDate: _date,\n      availableTimes: undefined,\n      dateValue: undefined,\n      appointmentList: undefined\n    };\n    this.checkAvailableTimes();\n  }\n\n  getCurrentDate() {\n    let separator = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"\";\n    let newDate = new Date();\n    let date = newDate.getDate();\n    let month = newDate.getMonth() + 1;\n    let year = newDate.getFullYear();\n    return `${month < 10 ? `0${month}` : `${month}`}${separator}${date}${separator}${year}`;\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"Header-Label\",\n        children: \"Smiley Faces Dentist Scheduler\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Calendar, {\n        onChange: this.onCalendarChange,\n        value: this.state.dateValue // tileDisabled={this.tileDisabled}\n\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(AvailableTimes, {\n        onTimeChange: this.onTimeChange,\n        availableTimes: this.state.availableTimes,\n        selectedDate: this.state.selectedDate\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Date Selected: \", this.state.selectedDate]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(NewAppointment, {\n        date: this.state.selectedDate\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(MainScheduler, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 113,\n    columnNumber: 5\n  }, this);\n}\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/Brendan Johnston/Documents/VSCode Projects/Dentist Scheduler - CoFi Project/DentistScheduler/Dentist-Scheduler/src/App.js"],"names":["logo","react","NewAppointment","Calendar","ListGroup","axios","AvailableTimes","MainScheduler","Component","constructor","props","onCalendarChange","param","console","log","date","getDate","month","getMonth","year","getFullYear","separator","stringVal","setState","selectedDate","checkAvailableTimes","dateChange","event","onTimeChange","change","appointmentTime","url","state","header","success","get","then","availableTimesFromServer","availableTimes","data","catch","ex","getCurrentDate","undefined","dateValue","appointmentList","newDate","Date","render","App"],"mappings":"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","sourcesContent":["// Dentist Scheduler Application\n// Written by Brendan Johnston\n\n/*\n  This application allows for a Dentist office to schedule, and maintain new appointments. This also allows for customers to create new appointments for themselves.\n*/\n\nimport logo from './logo.svg';\nimport './App.css';\nimport react from 'react';\nimport NewAppointment from './Components/NewAppointments';\nimport Calendar from 'react-calendar';\nimport 'react-calendar/dist/Calendar.css';\nimport { ListGroup } from 'react-bootstrap';\nimport axios from 'axios';\nimport AvailableTimes from './Components/AvailableTimes';\n\n\nclass MainScheduler extends react.Component {\n  constructor(props) {\n    super(props);\n\n    let date = this.getCurrentDate(\"/\");\n    console.log(date);\n    this.state = {\n      selectedDate: date,\n      availableTimes: undefined,\n      dateValue: undefined,\n      appointmentList: undefined\n    };\n\n    this.checkAvailableTimes();\n  }\n\n  onCalendarChange = (param) => {\n    console.log(param);\n    let date = param.getDate();\n    let month = param.getMonth() + 1;\n    let year = param.getFullYear();\n    let separator = \"/\";\n\n    let stringVal = `${month < 10 ? `0${month}` : `${month}`\n    }${separator}${date}${separator}${year}`;\n\n    this.setState({\n      selectedDate: stringVal,\n    });\n    this.checkAvailableTimes();\n  };\n\n  dateChange = (event) => {\n\n\n  };\n\n  onTimeChange = (change) => {\n    this.setState({\n      appointmentTime: change,\n    })\n  };\n\n  checkAvailableTimes = () =>\n  {\n    var url = \"http://localhost:5083/DentistScheduler/GetAppointmentsByDate/\" + this.state.selectedDate;\n    const header = {\n        \"Access-Control-Allow-Origin\": \"*\"\n    }\n    var success = axios.get(url, header)\n    .then((availableTimesFromServer) => {\n        console.log(availableTimesFromServer);\n        this.setState({availableTimes: availableTimesFromServer.data});\n    })\n    .catch((ex) => {\n        console.log(ex);\n    })\n    console.log(success);\n  }\n\n  getCurrentDate(separator = \"\") {\n    let newDate = new Date();\n    let date = newDate.getDate();\n    let month = newDate.getMonth() + 1;\n    let year = newDate.getFullYear();\n\n    return `${month < 10 ? `0${month}` : `${month}`\n  }${separator}${date}${separator}${year}`;\n\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <label className=\"Header-Label\">Smiley Faces Dentist Scheduler</label>\n        <Calendar\n          onChange={this.onCalendarChange}\n          value={this.state.dateValue}\n          // tileDisabled={this.tileDisabled}\n        />\n        <AvailableTimes onTimeChange={this.onTimeChange} availableTimes={this.state.availableTimes} selectedDate={this.state.selectedDate}/>\n        <label>Date Selected: {this.state.selectedDate}</label>\n\n        <NewAppointment date={this.state.selectedDate}></NewAppointment>\n      </div>\n    );\n  }\n}\n\n\n\nfunction App() {\n  \n  return (\n    <div className=\"App\">\n      <MainScheduler></MainScheduler>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}