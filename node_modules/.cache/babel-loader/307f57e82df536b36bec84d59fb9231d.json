{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Brendan Johnston\\\\Documents\\\\VSCode Projects\\\\Dentist Scheduler - CoFi Project\\\\DentistScheduler\\\\Dentist-Scheduler\\\\src\\\\App.js\";\n// Dentist Scheduler Application\n// Written by Brendan Johnston\n\n/*\n  This application allows for a Dentist office to schedule, and maintain new appointments. This also allows for customers to create new appointments for themselves.\n*/\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport react from \"react\";\nimport NewAppointment from './Components/NewAppointments';\nimport AppointmentEdit from './Components/AppointmentEdit'; // import Calendar from \"react-calendar\";\n\nimport { Calendar, momentLocalizer } from 'react-big-calendar';\nimport moment from 'moment'; // import 'moment/locale/en-US';\n//import \"react-calendar/dist/Calendar.css\";\n\nimport axios from \"axios\";\nimport AvailableTimes from \"./Components/AvailableTimes\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nmoment.locale('en');\nconst localizer = momentLocalizer(moment);\n\nclass MainScheduler extends react.Component {\n  constructor(props) {\n    super(props);\n\n    this.onCalendarChange = param => {\n      console.log(param);\n      let date = param.getDate();\n      let month = param.getMonth() + 1;\n      let year = param.getFullYear();\n      let separator = \"/\";\n      let stringVal = `${month < 10 ? `0${month}` : `${month}`}${separator}${date}${separator}${year}`;\n      this.setState({\n        selectedDate: stringVal\n      });\n      this.checkAvailableTimes();\n    };\n\n    this.dateChange = event => {};\n\n    this.onTimeChange = change => {\n      var start = change.start;\n      var end = change.end;\n      this.setState({\n        appointmentTime: change,\n        newAppointmentIsOpen: true\n      });\n    };\n\n    this.eventSelected = change => {};\n\n    this.checkAvailableTimes = () => {\n      var url = \"http://localhost:5083/DentistScheduler/\";\n      const header = {\n        \"Access-Control-Allow-Origin\": \"*\"\n      };\n      var success = axios.get(url, header).then(availableTimesFromServer => {\n        console.log(availableTimesFromServer);\n        let array = [];\n        availableTimesFromServer.data.forEach(element => {\n          var startTime = moment(Number(element.startTime)).toDate();\n          var endTime = moment(Number(element.endTime)).toDate();\n          var appointment = {\n            title: \"\\nAppointment:\\n\" + element.firstName + \" \" + element.lastName + \"phone: \" + element.phone,\n            phone: element.phone,\n            firstName: element.firstName,\n            lastName: element.lastName,\n            start: startTime,\n            end: endTime,\n            id: element.id\n          };\n          array.push(appointment);\n        });\n        this.setState({\n          appointmentList: array\n        }); //this.setState({ availableTimes: availableTimesFromServer.data });\n      }).catch(ex => {\n        console.log(ex);\n      });\n      console.log(success);\n    };\n\n    this.newAppointmentClose = () => {\n      this.setState({\n        newAppointmentIsOpen: false\n      });\n    };\n\n    let _date = this.getCurrentDate(\"/\");\n\n    console.log(_date);\n    this.state = {\n      selectedDate: _date,\n      availableTimes: undefined,\n      dateValue: undefined,\n      appointmentList: [],\n      newAppointmentIsOpen: false\n    };\n    this.checkAvailableTimes();\n  }\n\n  getCurrentDate() {\n    let separator = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"\";\n    let newDate = new Date();\n    let date = newDate.getDate();\n    let month = newDate.getMonth() + 1;\n    let year = newDate.getFullYear();\n    return `${month < 10 ? `0${month}` : `${month}`}${separator}${date}${separator}${year}`;\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"Header-Label\",\n        children: \"Smiley Faces Dentist Scheduler\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Calendar, {\n        localizer: localizer,\n        defaultDate: moment().toDate(),\n        events: this.state.appointmentList,\n        startAccessor: \"start\",\n        endAccessor: \"end\",\n        views: ['month', 'week', 'day'],\n        defaultView: \"week\",\n        selectable: true,\n        onSelectSlot: this.onTimeChange,\n        onSelectEvent: this.eventSelected,\n        style: {\n          height: 500\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(AvailableTimes, {\n        style: {\n          display: \"flex\"\n        },\n        onTimeChange: this.onTimeChange,\n        availableTimes: this.state.availableTimes,\n        selectedDate: this.state.selectedDate\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Date Selected: \", this.state.selectedDate]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"\\xA0\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Time Selected: \", this.state.appointmentTime]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(AppointmentEdit, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(NewAppointment, {\n        date: this.state.selectedDate,\n        newAppointmentModelIsOpen: this.state.newAppointmentIsOpen,\n        onNewAppointmentClose: this.newAppointmentClose\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    style: {\n      display: \"table\",\n      width: \"100%\"\n    },\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-Header\",\n      children: /*#__PURE__*/_jsxDEV(MainScheduler, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 179,\n    columnNumber: 5\n  }, this);\n}\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/Brendan Johnston/Documents/VSCode Projects/Dentist Scheduler - CoFi Project/DentistScheduler/Dentist-Scheduler/src/App.js"],"names":["logo","react","NewAppointment","AppointmentEdit","Calendar","momentLocalizer","moment","axios","AvailableTimes","locale","localizer","MainScheduler","Component","constructor","props","onCalendarChange","param","console","log","date","getDate","month","getMonth","year","getFullYear","separator","stringVal","setState","selectedDate","checkAvailableTimes","dateChange","event","onTimeChange","change","start","end","appointmentTime","newAppointmentIsOpen","eventSelected","url","header","success","get","then","availableTimesFromServer","array","data","forEach","element","startTime","Number","toDate","endTime","appointment","title","firstName","lastName","phone","id","push","appointmentList","catch","ex","newAppointmentClose","getCurrentDate","state","availableTimes","undefined","dateValue","newDate","Date","render","height","display","App","width"],"mappings":"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","sourcesContent":["// Dentist Scheduler Application\n// Written by Brendan Johnston\n\n/*\n  This application allows for a Dentist office to schedule, and maintain new appointments. This also allows for customers to create new appointments for themselves.\n*/\n\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport react from \"react\";\nimport NewAppointment from './Components/NewAppointments';\nimport AppointmentEdit from './Components/AppointmentEdit';\n// import Calendar from \"react-calendar\";\nimport {Calendar, momentLocalizer} from 'react-big-calendar';\nimport moment from 'moment';\n// import 'moment/locale/en-US';\n//import \"react-calendar/dist/Calendar.css\";\nimport axios from \"axios\";\nimport AvailableTimes from \"./Components/AvailableTimes\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\n\nmoment.locale('en')\nconst localizer = momentLocalizer(moment);\n\nclass MainScheduler extends react.Component {\n  constructor(props) {\n    super(props);\n\n    let date = this.getCurrentDate(\"/\");\n    console.log(date);\n    this.state = {\n      selectedDate: date,\n      availableTimes: undefined,\n      dateValue: undefined,\n      appointmentList: [],\n      newAppointmentIsOpen: false\n    };\n\n    this.checkAvailableTimes();\n  }\n\n  onCalendarChange = (param) => {\n    console.log(param);\n    let date = param.getDate();\n    let month = param.getMonth() + 1;\n    let year = param.getFullYear();\n    let separator = \"/\";\n\n    let stringVal = `${\n      month < 10 ? `0${month}` : `${month}`\n    }${separator}${date}${separator}${year}`;\n\n    this.setState({\n      selectedDate: stringVal,\n    });\n    this.checkAvailableTimes();\n  };\n\n  dateChange = (event) => {};\n\n  onTimeChange = (change) => {\n    var start = change.start;\n    var end = change.end;\n    this.setState({\n      appointmentTime: change,\n      newAppointmentIsOpen: true,\n    });\n  };\n\n  eventSelected = (change) =>\n  {\n\n  }\n\n  checkAvailableTimes = () => {\n    var url =\n      \"http://localhost:5083/DentistScheduler/\";\n    const header = {\n      \"Access-Control-Allow-Origin\": \"*\",\n    };\n    var success = axios\n      .get(url, header)\n      .then((availableTimesFromServer) => {\n        console.log(availableTimesFromServer);\n\n        let array = [];\n        availableTimesFromServer.data.forEach(element => {\n          var startTime = moment(Number(element.startTime)).toDate();\n          var endTime = moment(Number(element.endTime)).toDate();\n          var appointment = {\n            title: \"\\nAppointment:\\n\" + element.firstName + \" \" + element.lastName + \"phone: \" + element.phone,\n            phone: element.phone,\n            firstName: element.firstName,\n            lastName: element.lastName,\n            start: startTime,\n            end: endTime,\n            id: element.id\n          };\n          array.push(appointment);\n        })\n\n        this.setState({appointmentList: array});\n        //this.setState({ availableTimes: availableTimesFromServer.data });\n      })\n      .catch((ex) => {\n        console.log(ex);\n      });\n    console.log(success);\n  };\n\n  newAppointmentClose = () =>\n  {\n    this.setState({\n      newAppointmentIsOpen: false\n    });\n  }\n\n  getCurrentDate(separator = \"\") {\n    let newDate = new Date();\n    let date = newDate.getDate();\n    let month = newDate.getMonth() + 1;\n    let year = newDate.getFullYear();\n\n    return `${\n      month < 10 ? `0${month}` : `${month}`\n    }${separator}${date}${separator}${year}`;\n  }\n  \n\n  render() {\n    return (\n      <div className=\"App\">\n        <label className=\"Header-Label\">Smiley Faces Dentist Scheduler</label>\n        {/* <Calendar\n          style={{ display: \"flex\" }}\n          onChange={this.onCalendarChange}\n          value={this.state.dateValue}\n          // tileDisabled={this.tileDisabled}\n        /> */}\n        <Calendar\n          localizer={localizer}\n          defaultDate={moment().toDate()}\n          events={this.state.appointmentList}\n          startAccessor=\"start\"\n          endAccessor=\"end\"\n          views={['month', 'week', 'day']}\n          defaultView='week'\n          selectable={true}\n          onSelectSlot={this.onTimeChange}\n          onSelectEvent={this.eventSelected}\n          style={{ height: 500 }}\n        />\n        <AvailableTimes\n          style={{ display: \"flex\" }}\n          onTimeChange={this.onTimeChange}\n          availableTimes={this.state.availableTimes}\n          selectedDate={this.state.selectedDate}\n        />\n        <br />\n        <label>Date Selected: {this.state.selectedDate}</label>\n        <span>&nbsp;</span>\n        <label>Time Selected: {this.state.appointmentTime}</label>\n        <AppointmentEdit>\n\n        </AppointmentEdit>\n        <NewAppointment\n          date={this.state.selectedDate}\n          newAppointmentModelIsOpen={this.state.newAppointmentIsOpen}\n          onNewAppointmentClose={this.newAppointmentClose}\n        ></NewAppointment>\n      </div>\n    );\n  }\n}\n\nfunction App() {\n  return (\n    <div className=\"App\" style={{display: \"table\", width: \"100%\"}}>\n      <header className=\"App-Header\">\n        <MainScheduler></MainScheduler>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}