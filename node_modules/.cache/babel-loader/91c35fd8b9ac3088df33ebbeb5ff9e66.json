{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Brendan Johnston\\\\Documents\\\\VSCode Projects\\\\Dentist Scheduler - CoFi Project\\\\DentistScheduler\\\\Dentist-Scheduler\\\\src\\\\App.js\";\n// Dentist Scheduler Application\n// Written by Brendan Johnston\n\n/*\n  This application allows for a Dentist office to schedule, and maintain new appointments. This also allows for customers to create new appointments for themselves.\n*/\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport react from \"react\";\nimport NewAppointment from './Components/NewAppointments';\nimport AppointmentEdit from './Components/AppointmentEdit'; // import Calendar from \"react-calendar\";\n\nimport { Calendar, momentLocalizer } from 'react-big-calendar';\nimport moment from 'moment'; // import 'moment/locale/en-US';\n//import \"react-calendar/dist/Calendar.css\";\n\nimport axios from \"axios\";\nimport AvailableTimes from \"./Components/AvailableTimes\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nmoment.locale('en');\nconst localizer = momentLocalizer(moment);\n\nclass MainScheduler extends react.Component {\n  constructor(props) {\n    super(props);\n\n    this.onCalendarChange = param => {\n      console.log(param);\n      let date = param.getDate();\n      let month = param.getMonth() + 1;\n      let year = param.getFullYear();\n      let separator = \"/\";\n      let stringVal = `${month < 10 ? `0${month}` : `${month}`}${separator}${date}${separator}${year}`;\n      this.setState({\n        selectedDate: stringVal\n      });\n      this.checkAvailableTimes();\n    };\n\n    this.dateChange = event => {};\n\n    this.onTimeChange = change => {\n      var start = change.start;\n      var end = change.end;\n      this.setState({\n        startTime: start,\n        endTime: end,\n        newAppointmentIsOpen: true\n      });\n    };\n\n    this.eventSelected = change => {\n      var start = change.start;\n      var end = change.end;\n      this.setState({\n        selectedStartTime: \"\",\n        selectedEndTime: \"\",\n        selectedPhone: \"\",\n        selectedFirstName: \"\",\n        selectedLastName: \"\",\n        selectedId: change.id,\n        editAppointmentIsOpen: true\n      });\n    };\n\n    this.checkAvailableTimes = () => {\n      var url = \"http://localhost:5083/DentistScheduler/\";\n      const header = {\n        \"Access-Control-Allow-Origin\": \"*\"\n      };\n      var success = axios.get(url, header).then(availableTimesFromServer => {\n        console.log(availableTimesFromServer);\n        let array = [];\n        availableTimesFromServer.data.forEach(element => {\n          var startTime = moment(Number(element.startTime)).toDate();\n          var endTime = moment(Number(element.endTime)).toDate();\n          var appointment = {\n            title: element.firstName + \" \" + element.lastName + \" Phone: \" + element.phone,\n            phone: element.phone,\n            firstName: element.firstName,\n            lastName: element.lastName,\n            start: startTime,\n            end: endTime,\n            id: element.id\n          };\n          array.push(appointment);\n        });\n        this.setState({\n          appointmentList: array\n        }); //this.setState({ availableTimes: availableTimesFromServer.data });\n      }).catch(ex => {\n        console.log(ex);\n      });\n      console.log(success);\n    };\n\n    this.editAppointmentClose = () => {\n      this.setState({\n        editAppointmentIsOpen: false\n      });\n      this.checkAvailableTimes();\n    };\n\n    this.newAppointmentClose = () => {\n      this.setState({\n        newAppointmentIsOpen: false\n      });\n      this.checkAvailableTimes();\n    };\n\n    let _date = this.getCurrentDate(\"/\");\n\n    console.log(_date);\n    this.state = {\n      selectedDate: _date,\n      availableTimes: undefined,\n      dateValue: undefined,\n      appointmentList: [],\n      newAppointmentIsOpen: false,\n      editAppointmentIsOpen: false,\n      startTime: \"\",\n      endTime: \"\",\n      selectedStartTime: \"\",\n      selectedEndTime: \"\",\n      selectedPhone: \"\",\n      selectedFirstName: \"\",\n      selectedLastName: \"\",\n      selectedId: \"\"\n    };\n    this.checkAvailableTimes();\n  }\n\n  getCurrentDate() {\n    let separator = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"\";\n    let newDate = new Date();\n    let date = newDate.getDate();\n    let month = newDate.getMonth() + 1;\n    let year = newDate.getFullYear();\n    return `${month < 10 ? `0${month}` : `${month}`}${separator}${date}${separator}${year}`;\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(\"header\", {\n        className: \"Header-Label\",\n        children: /*#__PURE__*/_jsxDEV(\"b\", {\n          children: \"Smiley Faces Dentist Scheduler\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 42\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"A CoFi Special Business Venture!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(\"b\", {\n          children: \"Click\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 16\n        }, this), \" on appointment to \", /*#__PURE__*/_jsxDEV(\"b\", {\n          children: \"view and edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 47\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(\"b\", {\n          children: \"Click\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 16\n        }, this), \" or \", /*#__PURE__*/_jsxDEV(\"b\", {\n          children: \"Click and Drag\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 32\n        }, this), \" in empty space to \", /*#__PURE__*/_jsxDEV(\"b\", {\n          children: \"create new appointment\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 72\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Calendar, {\n        localizer: localizer,\n        defaultDate: moment().toDate(),\n        events: this.state.appointmentList,\n        startAccessor: \"start\",\n        endAccessor: \"end\",\n        views: ['month', 'week', 'day'],\n        defaultView: \"week\",\n        selectable: true,\n        onSelectSlot: this.onTimeChange,\n        onSelectEvent: this.eventSelected,\n        scrollToTime: moment().set({\n          h: 8,\n          m: 0\n        }).toDate(),\n        style: {\n          height: 800\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(AvailableTimes, {\n        style: {\n          display: \"flex\"\n        },\n        onTimeChange: this.onTimeChange,\n        availableTimes: this.state.availableTimes,\n        selectedDate: this.state.selectedDate\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(AppointmentEdit, {\n        startTime: this.state.selectedStartTime,\n        endTime: this.state.selectedEndTime,\n        phone: this.state.selectedPhone,\n        firstName: this.state.selectedFirstName,\n        lastName: this.state.selectedLastName,\n        id: this.state.selectedid,\n        I: true,\n        editAppointmentIsOpen: this.state.editAppointmentIsOpen,\n        onEditAppointmentClose: this.editAppointmentClose\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(NewAppointment, {\n        startTime: this.state.startTime,\n        endTime: this.state.endTime,\n        newAppointmentModelIsOpen: this.state.newAppointmentIsOpen,\n        onNewAppointmentClose: this.newAppointmentClose\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    style: {\n      display: \"table\",\n      width: \"100%\"\n    },\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-Header\",\n      children: /*#__PURE__*/_jsxDEV(MainScheduler, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 216,\n    columnNumber: 5\n  }, this);\n}\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/Brendan Johnston/Documents/VSCode Projects/Dentist Scheduler - CoFi Project/DentistScheduler/Dentist-Scheduler/src/App.js"],"names":["logo","react","NewAppointment","AppointmentEdit","Calendar","momentLocalizer","moment","axios","AvailableTimes","locale","localizer","MainScheduler","Component","constructor","props","onCalendarChange","param","console","log","date","getDate","month","getMonth","year","getFullYear","separator","stringVal","setState","selectedDate","checkAvailableTimes","dateChange","event","onTimeChange","change","start","end","startTime","endTime","newAppointmentIsOpen","eventSelected","selectedStartTime","selectedEndTime","selectedPhone","selectedFirstName","selectedLastName","selectedId","id","editAppointmentIsOpen","url","header","success","get","then","availableTimesFromServer","array","data","forEach","element","Number","toDate","appointment","title","firstName","lastName","phone","push","appointmentList","catch","ex","editAppointmentClose","newAppointmentClose","getCurrentDate","state","availableTimes","undefined","dateValue","newDate","Date","render","set","h","m","height","display","selectedid","App","width"],"mappings":"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","sourcesContent":["// Dentist Scheduler Application\n// Written by Brendan Johnston\n\n/*\n  This application allows for a Dentist office to schedule, and maintain new appointments. This also allows for customers to create new appointments for themselves.\n*/\n\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport react from \"react\";\nimport NewAppointment from './Components/NewAppointments';\nimport AppointmentEdit from './Components/AppointmentEdit';\n// import Calendar from \"react-calendar\";\nimport {Calendar, momentLocalizer} from 'react-big-calendar';\nimport moment from 'moment';\n// import 'moment/locale/en-US';\n//import \"react-calendar/dist/Calendar.css\";\nimport axios from \"axios\";\nimport AvailableTimes from \"./Components/AvailableTimes\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\n\nmoment.locale('en')\nconst localizer = momentLocalizer(moment);\n\nclass MainScheduler extends react.Component {\n  constructor(props) {\n    super(props);\n\n    let date = this.getCurrentDate(\"/\");\n    console.log(date);\n    this.state = {\n      selectedDate: date,\n      availableTimes: undefined,\n      dateValue: undefined,\n      appointmentList: [],\n      newAppointmentIsOpen: false,\n      editAppointmentIsOpen: false,\n      startTime: \"\",\n      endTime: \"\",\n      selectedStartTime: \"\",\n      selectedEndTime: \"\",\n      selectedPhone: \"\",\n      selectedFirstName: \"\",\n      selectedLastName: \"\",\n      selectedId: \"\"\n    };\n\n    this.checkAvailableTimes();\n  }\n\n  onCalendarChange = (param) => {\n    console.log(param);\n    let date = param.getDate();\n    let month = param.getMonth() + 1;\n    let year = param.getFullYear();\n    let separator = \"/\";\n\n    let stringVal = `${\n      month < 10 ? `0${month}` : `${month}`\n    }${separator}${date}${separator}${year}`;\n\n    this.setState({\n      selectedDate: stringVal,\n    });\n    this.checkAvailableTimes();\n  };\n\n  dateChange = (event) => {};\n\n  onTimeChange = (change) => {\n    var start = change.start;\n    var end = change.end;\n    this.setState({\n      startTime: start,\n      endTime: end,\n      newAppointmentIsOpen: true,\n    });\n  };\n\n  eventSelected = (change) =>\n  {\n    var start = change.start;\n    var end = change.end;\n    this.setState({\n      selectedStartTime: \"\",\n      selectedEndTime: \"\",\n      selectedPhone: \"\",\n      selectedFirstName: \"\",\n      selectedLastName: \"\",\n      selectedId: change.id,\n      editAppointmentIsOpen: true,\n    })\n  };\n\n  checkAvailableTimes = () => {\n    var url =\n      \"http://localhost:5083/DentistScheduler/\";\n    const header = {\n      \"Access-Control-Allow-Origin\": \"*\",\n    };\n    var success = axios\n      .get(url, header)\n      .then((availableTimesFromServer) => {\n        console.log(availableTimesFromServer);\n\n        let array = [];\n        availableTimesFromServer.data.forEach(element => {\n          var startTime = moment(Number(element.startTime)).toDate();\n          var endTime = moment(Number(element.endTime)).toDate();\n          var appointment = {\n            title: element.firstName + \" \" + element.lastName + \" Phone: \" + element.phone,\n            phone: element.phone,\n            firstName: element.firstName,\n            lastName: element.lastName,\n            start: startTime,\n            end: endTime,\n            id: element.id\n          };\n          array.push(appointment);\n        })\n\n        this.setState({appointmentList: array});\n        //this.setState({ availableTimes: availableTimesFromServer.data });\n      })\n      .catch((ex) => {\n        console.log(ex);\n      });\n    console.log(success);\n  };\n\n  editAppointmentClose = () =>\n  {\n    this.setState({\n      editAppointmentIsOpen: false\n    })\n    this.checkAvailableTimes();\n  };\n\n  newAppointmentClose = () =>\n  {\n    this.setState({\n      newAppointmentIsOpen: false\n    });\n    this.checkAvailableTimes();\n  };\n\n  getCurrentDate(separator = \"\") {\n    let newDate = new Date();\n    let date = newDate.getDate();\n    let month = newDate.getMonth() + 1;\n    let year = newDate.getFullYear();\n\n    return `${\n      month < 10 ? `0${month}` : `${month}`\n    }${separator}${date}${separator}${year}`;\n  };\n  \n\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"Header-Label\"><b>Smiley Faces Dentist Scheduler</b></header>\n        <label>A CoFi Special Business Venture!</label>\n        <br />\n        <label><b>Click</b> on appointment to <b>view and edit</b></label>\n        <br />\n        <label><b>Click</b> or <b>Click and Drag</b> in empty space to <b>create new appointment</b></label>\n        <br />\n        <Calendar\n          localizer={localizer}\n          defaultDate={moment().toDate()}\n          events={this.state.appointmentList}\n          startAccessor=\"start\"\n          endAccessor=\"end\"\n          views={['month', 'week', 'day']}\n          defaultView='week'\n          selectable={true}\n          onSelectSlot={this.onTimeChange}\n          onSelectEvent={this.eventSelected}\n          scrollToTime={moment().set({h: 8, m: 0}).toDate()}\n          style={{ height: 800 }}\n        />\n        <AvailableTimes\n          style={{ display: \"flex\" }}\n          onTimeChange={this.onTimeChange}\n          availableTimes={this.state.availableTimes}\n          selectedDate={this.state.selectedDate}\n        />\n        <br />\n        <AppointmentEdit\n        startTime={this.state.selectedStartTime}\n        endTime={this.state.selectedEndTime}\n        phone={this.state.selectedPhone}\n        firstName={this.state.selectedFirstName}\n        lastName={this.state.selectedLastName}\n        id={this.state.selectedid}I\n        editAppointmentIsOpen={this.state.editAppointmentIsOpen}\n        onEditAppointmentClose={this.editAppointmentClose}\n        >\n\n        </AppointmentEdit>\n        <NewAppointment\n          startTime={this.state.startTime}\n          endTime={this.state.endTime}\n          newAppointmentModelIsOpen={this.state.newAppointmentIsOpen}\n          onNewAppointmentClose={this.newAppointmentClose}\n        ></NewAppointment>\n      </div>\n    );\n  }\n}\n\nfunction App() {\n  return (\n    <div className=\"App\" style={{display: \"table\", width: \"100%\"}}>\n      <header className=\"App-Header\">\n        <MainScheduler></MainScheduler>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}