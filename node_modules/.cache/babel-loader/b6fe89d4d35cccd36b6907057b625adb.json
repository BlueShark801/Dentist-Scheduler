{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Brendan Johnston\\\\Documents\\\\VSCode Projects\\\\Dentist Scheduler - CoFi Project\\\\DentistScheduler\\\\Dentist-Scheduler\\\\src\\\\App.js\";\n// Dentist Scheduler Application\n// Written by Brendan Johnston\n\n/*\n  This application allows for a Dentist office to schedule, and maintain new appointments. This also allows for customers to create new appointments for themselves.\n*/\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport react from \"react\";\nimport NewAppointment from \"./Components/NewAppointments\"; // import Calendar from \"react-calendar\";\n\nimport Calendar from 'react-big-calendar';\nimport \"react-calendar/dist/Calendar.css\";\nimport axios from \"axios\";\nimport AvailableTimes from \"./Components/AvailableTimes\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass MainScheduler extends react.Component {\n  constructor(props) {\n    super(props);\n\n    this.onCalendarChange = param => {\n      console.log(param);\n      let date = param.getDate();\n      let month = param.getMonth() + 1;\n      let year = param.getFullYear();\n      let separator = \"/\";\n      let stringVal = `${month < 10 ? `0${month}` : `${month}`}${separator}${date}${separator}${year}`;\n      this.setState({\n        selectedDate: stringVal\n      });\n      this.checkAvailableTimes();\n    };\n\n    this.dateChange = event => {};\n\n    this.onTimeChange = change => {\n      this.setState({\n        appointmentTime: change,\n        newAppointmentIsOpen: true\n      });\n    };\n\n    this.checkAvailableTimes = () => {\n      var url = \"http://localhost:5083/DentistScheduler/GetAppointmentsByDate/\" + this.state.selectedDate;\n      const header = {\n        \"Access-Control-Allow-Origin\": \"*\"\n      };\n      var success = axios.get(url, header).then(availableTimesFromServer => {\n        console.log(availableTimesFromServer); //let array = [];\n        // availableTimesFromServer.data.forEach(element => {\n        //   type Appointment = {\n        //     time: element.item1,\n        //     appointmentValue: element.item2\n        //   };\n        //   array.push(Appointment);\n        // })\n\n        this.setState({\n          availableTimes: availableTimesFromServer.data\n        });\n      }).catch(ex => {\n        console.log(ex);\n      });\n      console.log(success);\n    };\n\n    this.newAppointmentClose = () => {\n      this.setState({\n        newAppointmentIsOpen: false\n      });\n    };\n\n    let _date = this.getCurrentDate(\"/\");\n\n    console.log(_date);\n    this.state = {\n      selectedDate: _date,\n      availableTimes: undefined,\n      dateValue: undefined,\n      appointmentList: undefined,\n      newAppointmentIsOpen: false\n    };\n    this.checkAvailableTimes();\n  }\n\n  getCurrentDate() {\n    let separator = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"\";\n    let newDate = new Date();\n    let date = newDate.getDate();\n    let month = newDate.getMonth() + 1;\n    let year = newDate.getFullYear();\n    return `${month < 10 ? `0${month}` : `${month}`}${separator}${date}${separator}${year}`;\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"Header-Label\",\n        children: \"Smiley Faces Dentist Scheduler\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Calendar, {\n        style: {\n          display: \"flex\"\n        },\n        onChange: this.onCalendarChange,\n        value: this.state.dateValue // tileDisabled={this.tileDisabled}\n\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(AvailableTimes, {\n        style: {\n          display: \"flex\"\n        },\n        onTimeChange: this.onTimeChange,\n        availableTimes: this.state.availableTimes,\n        selectedDate: this.state.selectedDate\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Date Selected: \", this.state.selectedDate]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"\\xA0\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Time Selected: \", this.state.appointmentTime]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(NewAppointment, {\n        date: this.state.selectedDate,\n        newAppointmentModelIsOpen: this.state.newAppointmentIsOpen,\n        onNewAppointmentClose: this.newAppointmentClose\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    style: {\n      display: \"table\",\n      width: \"100%\"\n    },\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-Header\",\n      children: /*#__PURE__*/_jsxDEV(MainScheduler, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 142,\n    columnNumber: 5\n  }, this);\n}\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/Brendan Johnston/Documents/VSCode Projects/Dentist Scheduler - CoFi Project/DentistScheduler/Dentist-Scheduler/src/App.js"],"names":["logo","react","NewAppointment","Calendar","axios","AvailableTimes","MainScheduler","Component","constructor","props","onCalendarChange","param","console","log","date","getDate","month","getMonth","year","getFullYear","separator","stringVal","setState","selectedDate","checkAvailableTimes","dateChange","event","onTimeChange","change","appointmentTime","newAppointmentIsOpen","url","state","header","success","get","then","availableTimesFromServer","availableTimes","data","catch","ex","newAppointmentClose","getCurrentDate","undefined","dateValue","appointmentList","newDate","Date","render","display","App","width"],"mappings":"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","sourcesContent":["// Dentist Scheduler Application\n// Written by Brendan Johnston\n\n/*\n  This application allows for a Dentist office to schedule, and maintain new appointments. This also allows for customers to create new appointments for themselves.\n*/\n\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport react from \"react\";\nimport NewAppointment from \"./Components/NewAppointments\";\n// import Calendar from \"react-calendar\";\nimport Calendar from 'react-big-calendar';\nimport \"react-calendar/dist/Calendar.css\";\nimport axios from \"axios\";\nimport AvailableTimes from \"./Components/AvailableTimes\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nclass MainScheduler extends react.Component {\n  constructor(props) {\n    super(props);\n\n    let date = this.getCurrentDate(\"/\");\n    console.log(date);\n    this.state = {\n      selectedDate: date,\n      availableTimes: undefined,\n      dateValue: undefined,\n      appointmentList: undefined,\n      newAppointmentIsOpen: false,\n    };\n\n    this.checkAvailableTimes();\n  }\n\n  onCalendarChange = (param) => {\n    console.log(param);\n    let date = param.getDate();\n    let month = param.getMonth() + 1;\n    let year = param.getFullYear();\n    let separator = \"/\";\n\n    let stringVal = `${\n      month < 10 ? `0${month}` : `${month}`\n    }${separator}${date}${separator}${year}`;\n\n    this.setState({\n      selectedDate: stringVal,\n    });\n    this.checkAvailableTimes();\n  };\n\n  dateChange = (event) => {};\n\n  onTimeChange = (change) => {\n    this.setState({\n      appointmentTime: change,\n      newAppointmentIsOpen: true,\n    });\n  };\n\n  checkAvailableTimes = () => {\n    var url =\n      \"http://localhost:5083/DentistScheduler/GetAppointmentsByDate/\" +\n      this.state.selectedDate;\n    const header = {\n      \"Access-Control-Allow-Origin\": \"*\",\n    };\n    var success = axios\n      .get(url, header)\n      .then((availableTimesFromServer) => {\n        console.log(availableTimesFromServer);\n\n        //let array = [];\n        // availableTimesFromServer.data.forEach(element => {\n        //   type Appointment = {\n        //     time: element.item1,\n        //     appointmentValue: element.item2\n        //   };\n        //   array.push(Appointment);\n        // })\n\n        this.setState({ availableTimes: availableTimesFromServer.data });\n      })\n      .catch((ex) => {\n        console.log(ex);\n      });\n    console.log(success);\n  };\n\n  newAppointmentClose = () =>\n  {\n    this.setState({\n      newAppointmentIsOpen: false\n    });\n  }\n\n  getCurrentDate(separator = \"\") {\n    let newDate = new Date();\n    let date = newDate.getDate();\n    let month = newDate.getMonth() + 1;\n    let year = newDate.getFullYear();\n\n    return `${\n      month < 10 ? `0${month}` : `${month}`\n    }${separator}${date}${separator}${year}`;\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <label className=\"Header-Label\">Smiley Faces Dentist Scheduler</label>\n        <Calendar\n          style={{ display: \"flex\" }}\n          onChange={this.onCalendarChange}\n          value={this.state.dateValue}\n          // tileDisabled={this.tileDisabled}\n        />\n        <AvailableTimes\n          style={{ display: \"flex\" }}\n          onTimeChange={this.onTimeChange}\n          availableTimes={this.state.availableTimes}\n          selectedDate={this.state.selectedDate}\n        />\n        <br />\n        <label>Date Selected: {this.state.selectedDate}</label>\n        <span>&nbsp;</span>\n        <label>Time Selected: {this.state.appointmentTime}</label>\n\n        <NewAppointment\n          date={this.state.selectedDate}\n          newAppointmentModelIsOpen={this.state.newAppointmentIsOpen}\n          onNewAppointmentClose={this.newAppointmentClose}\n        ></NewAppointment>\n      </div>\n    );\n  }\n}\n\nfunction App() {\n  return (\n    <div className=\"App\" style={{display: \"table\", width: \"100%\"}}>\n      <header className=\"App-Header\">\n        <MainScheduler></MainScheduler>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}