{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Brendan Johnston\\\\Documents\\\\VSCode Projects\\\\Dentist Scheduler - CoFi Project\\\\Dentist-Scheduler\\\\src\\\\Components\\\\ScheduleCalendar.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport Calendar from 'react-calendar';\nimport 'react-calendar/dist/Calendar.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst disabledDates = [Calendar.tomorrow, Calendar.in3Days, Calendar.in5Days];\n\nfunction tileDisabled(_ref) {\n  let {\n    date,\n    view\n  } = _ref;\n\n  // Disable tiles in month view only\n  if (view === 'month') {\n    // Check if a date React-Calendar wants to check is on the list of disabled dates\n    return disabledDates.find(dDate => Calendar.isSameDay(dDate, date));\n  }\n}\n\nfunction MyApp() {\n  _s();\n\n  const [value, setValue] = useState(new Date());\n  const date = undefined;\n  return /*#__PURE__*/_jsxDEV(Calendar, {\n    onChange: onChange,\n    value: date,\n    tileDisabled: tileDisabled\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n}\n\n_s(MyApp, \"ojhCmkQ3k+kVHyMOfBmyTFu2wy0=\");\n\n_c = MyApp;\n\nfunction onChange() {}\n\nclass ScheduleCalendar extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.tileDisabled = _ref2 => {\n      let {\n        date,\n        view\n      } = _ref2;\n      // Check if a date React-Calendar wants to check is on the list of disabled dates\n      returnVal = this.state.disabledDates.find(dDate => Calendar.isSameDay(dDate, date));\n      return returnVal;\n    };\n\n    this.onChange = param => {\n      this.setState({\n        selectedDate: param\n      });\n    };\n\n    {\n      MyApp();\n      this.state = {\n        value: \"\",\n        selectedDate: undefined,\n        disabledDates: [Calendar.tomorrow, Calendar.in3Days, Calendar.in5Days]\n      };\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"center\",\n      children: /*#__PURE__*/_jsxDEV(Calendar, {\n        onChange: this.onChange,\n        value: this.state.value,\n        tileDisabled: this.tileDisabled\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default ScheduleCalendar;\n\nvar _c;\n\n$RefreshReg$(_c, \"MyApp\");","map":{"version":3,"sources":["C:/Users/Brendan Johnston/Documents/VSCode Projects/Dentist Scheduler - CoFi Project/Dentist-Scheduler/src/Components/ScheduleCalendar.jsx"],"names":["React","useState","Calendar","disabledDates","tomorrow","in3Days","in5Days","tileDisabled","date","view","find","dDate","isSameDay","MyApp","value","setValue","Date","undefined","onChange","ScheduleCalendar","Component","constructor","props","returnVal","state","param","setState","selectedDate","render"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,QAAP,MAAqB,gBAArB;AACA,OAAO,kCAAP;;AAEA,MAAMC,aAAa,GAAG,CAACD,QAAQ,CAACE,QAAV,EAAoBF,QAAQ,CAACG,OAA7B,EAAsCH,QAAQ,CAACI,OAA/C,CAAtB;;AAEA,SAASC,YAAT,OAAsC;AAAA,MAAhB;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,GAAgB;;AACpC;AACA,MAAIA,IAAI,KAAK,OAAb,EAAsB;AACpB;AACA,WAAON,aAAa,CAACO,IAAd,CAAmBC,KAAK,IAAIT,QAAQ,CAACU,SAAT,CAAmBD,KAAnB,EAA0BH,IAA1B,CAA5B,CAAP;AACD;AACF;;AAED,SAASK,KAAT,GAAiB;AAAA;;AACf,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBd,QAAQ,CAAC,IAAIe,IAAJ,EAAD,CAAlC;AACA,QAAMR,IAAI,GAAGS,SAAb;AACA,sBACE,QAAC,QAAD;AACE,IAAA,QAAQ,EAAEC,QADZ;AAEE,IAAA,KAAK,EAAEV,IAFT;AAGE,IAAA,YAAY,EAAED;AAHhB;AAAA;AAAA;AAAA;AAAA,UADF;AAOD;;GAVQM,K;;KAAAA,K;;AAYT,SAASK,QAAT,GACA,CAEC;;AAGD,MAAMC,gBAAN,SAA+BnB,KAAK,CAACoB,SAArC,CAA+C;AAC7CC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAYnBf,YAZmB,GAYJ,SAAoB;AAAA,UAAnB;AAAEC,QAAAA,IAAF;AAAQC,QAAAA;AAAR,OAAmB;AAEjC;AACAc,MAAAA,SAAS,GAAG,KAAKC,KAAL,CAAWrB,aAAX,CAAyBO,IAAzB,CAA+BC,KAAD,IAAWT,QAAQ,CAACU,SAAT,CAAmBD,KAAnB,EAA0BH,IAA1B,CAAzC,CAAZ;AACA,aAAOe,SAAP;AAED,KAlBkB;;AAAA,SAoBnBL,QApBmB,GAoBPO,KAAD,IAAW;AACpB,WAAKC,QAAL,CAAc;AACZC,QAAAA,YAAY,EAAEF;AADF,OAAd;AAGD,KAxBkB;;AAEjB;AACIZ,MAAAA,KAAK;AACP,WAAKW,KAAL,GAAa;AACXV,QAAAA,KAAK,EAAE,EADI;AAEXa,QAAAA,YAAY,EAAEV,SAFH;AAGXd,QAAAA,aAAa,EAAE,CAACD,QAAQ,CAACE,QAAV,EAAoBF,QAAQ,CAACG,OAA7B,EAAsCH,QAAQ,CAACI,OAA/C;AAHJ,OAAb;AAKD;AACF;;AAgBDsB,EAAAA,MAAM,GAAG;AACP,wBACE;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA,6BACE,QAAC,QAAD;AACE,QAAA,QAAQ,EAAE,KAAKV,QADjB;AAEE,QAAA,KAAK,EAAE,KAAKM,KAAL,CAAWV,KAFpB;AAGE,QAAA,YAAY,EAAE,KAAKP;AAHrB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AASD;;AArC4C;;AAwC/C,eAAeY,gBAAf","sourcesContent":["import React, { useState } from 'react';\r\nimport Calendar from 'react-calendar';\r\nimport 'react-calendar/dist/Calendar.css';\r\n\r\nconst disabledDates = [Calendar.tomorrow, Calendar.in3Days, Calendar.in5Days];\r\n\r\nfunction tileDisabled({ date, view }) {\r\n  // Disable tiles in month view only\r\n  if (view === 'month') {\r\n    // Check if a date React-Calendar wants to check is on the list of disabled dates\r\n    return disabledDates.find(dDate => Calendar.isSameDay(dDate, date));\r\n  }\r\n}\r\n\r\nfunction MyApp() {\r\n  const [value, setValue] = useState(new Date());\r\n  const date = undefined;\r\n  return (\r\n    <Calendar\r\n      onChange={onChange}\r\n      value={date}\r\n      tileDisabled={tileDisabled}\r\n    />\r\n  );\r\n}\r\n\r\nfunction onChange()\r\n{\r\n\r\n}\r\n\r\n\r\nclass ScheduleCalendar extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    {\r\n        MyApp();\r\n      this.state = {\r\n        value: \"\",\r\n        selectedDate: undefined,\r\n        disabledDates: [Calendar.tomorrow, Calendar.in3Days, Calendar.in5Days],\r\n      };\r\n    }\r\n  }\r\n\r\n  tileDisabled = ({ date, view }) => {\r\n\r\n    // Check if a date React-Calendar wants to check is on the list of disabled dates\r\n    returnVal = this.state.disabledDates.find((dDate) => Calendar.isSameDay(dDate, date));\r\n    return returnVal;\r\n    \r\n  };\r\n\r\n  onChange = (param) => {\r\n    this.setState({\r\n      selectedDate: param,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"center\">\r\n        <Calendar\r\n          onChange={this.onChange}\r\n          value={this.state.value}\r\n          tileDisabled={this.tileDisabled}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ScheduleCalendar;"]},"metadata":{},"sourceType":"module"}